{"version":3,"sources":["exchange/icon-buy.svg","exchange/icon-sale.svg","exchange/icon-arrow.svg","exchange/Rate.ts","exchange/State.tsx","exchange/PrivatBank.tsx","exchange/IconRate.tsx","exchange/IconRateTrend.tsx","exchange/RateItem.tsx","exchange/Article.tsx","exchange/Layout.tsx","DateTime.tsx","Header.tsx","Background.tsx","error/Stack.tsx","error/Layout.tsx","error/Boundary.tsx","Loader.tsx","Main.tsx","index.tsx","App.tsx"],"names":["module","exports","RateTypes","useState","React","undefined","state","setState","fetch","then","response","json","map","item","currency","ccy","buy","parseFloat","sale","getImageSource","type","IconRate","className","src","alt","toUpperCase","slice","IconRateTrend","value","arrow","RateItem","props","trend","current","previous","RateTrend","previousValue","toFixed","CurrentRateItem","rate","aria-label","aria-valuenow","Article","title","key","displayName","Layout","rates","dateFormat","Date","toLocaleDateString","timeFormat","toTimeString","Item","ref","format","interval","childProps","time","tick","clearInterval","bind","window","setInterval","trimEnd","DateTime","Header","Background","theme","Array","isArray","autoPlay","muted","loop","Stack","code","JSON","stringify","error","message","name","stack","componentStack","Boundary","emptyState","errorInfo","this","Object","assign","children","freeze","Loader","Main","exchange","getChildren","ReactDOM","render","Exchange","document","querySelector"],"mappings":"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","file":"static/js/main.36acd126.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-buy.404339d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-sale.9463f2b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow.7b6df126.svg\";","export type Rate = {\n    currency: string;\n} & {\n    [k in RateType]: number;\n}\nexport type RateTrend = \"up\" | \"down\" | undefined;\nexport const RateTrend: (current: number, prevous?: number) => RateTrend = (current, previous) => {\n    if ((previous === undefined) || (previous === current)) {\n        return undefined;\n    }\n    return (previous < current) ? \"up\" : \"down\";\n};\n\nexport type RateType = \"buy\" | \"sale\";\nexport const RateTypes: Array<RateType> = [\"buy\", \"sale\"];\nexport type RateArray = Array<Rate>;\nexport type RateState = RateArray | Error | undefined;\nexport type GetRate = () => Promise<Array<Rate>>;\n","import * as React from \"react\";\n\nimport { PrivatBank } from \"./PrivatBank\";\nimport { RateArray } from \"./Rate\";\n\nexport type State = RateArray | Error | undefined;\nexport const useState = (): State => {\n    const [state, setState] = React.useState<State>(undefined);\n    React.useEffect(() => {\n        if (state !== undefined) {\n            return;\n        }\n        PrivatBank().then(setState, setState);\n    }, [state]);\n    return state;\n};\n","import { GetRate } from \"./Rate\";\n\ntype ResponseItem = {\n    ccy: string;\n    buy: string;\n    sale: string;\n}\n\nexport const PrivatBank: GetRate = () => {\n    return fetch(\"https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11\")\n        .then((response): Promise<Array<ResponseItem>> => response.json())\n        .then((json) => json.map((item) => ({\n            currency: item.ccy,\n            buy: parseFloat(item.buy),\n            sale: parseFloat(item.sale)\n        })))\n};\n","import * as React from \"react\";\nimport { RateType } from \"./Rate\";\n\nimport buy from \"./icon-buy.svg\";\nimport sale from \"./icon-sale.svg\";\nimport \"./IconRate.scss\";\n\nconst getImageSource = (type: RateType) => {\n    switch (type) {\n        case \"buy\":\n            return buy;\n        case \"sale\":\n            return sale;\n    }\n};\n\nexport const IconRate: React.FC<{ type: RateType }> = ({ type }) => {\n    return <img\n        className=\"icon-rate\"\n        src={getImageSource(type)}\n        alt={type[ 0 ].toUpperCase() + type.slice(1) + \" Rate\"}\n    />;\n};\n","import * as React from \"react\";\nimport { RateTrend } from \"./Rate\";\nimport arrow from \"./icon-arrow.svg\";\n\nexport const IconRateTrend: React.FC<{ value: RateTrend }> = ({ value }) => {\n    if (value === undefined) {\n        return null;\n    }\n    return <img src={arrow} alt={`${value} trend icon`} className={`icon-rate-trend icon-rate-trend__${value}`}/>;\n};\n","import * as React from \"react\";\nimport { RateTrend } from \"./Rate\";\nimport { IconRateTrend } from \"./IconRateTrend\";\nimport \"./RateItem.scss\";\nexport type RateValueProps = {\n    value: number;\n} & ({ trend: RateTrend } | { previousValue?: number, });\n\nexport const RateItem: React.FC<RateValueProps> = (props) => {\n    const trend = (\"trend\" in props) ? props.trend : RateTrend(props.value, props.previousValue);\n    const value = props.value.toFixed(2);\n    let className = `rate-item`;\n    if (trend !== undefined) {\n        className += ` ${className}__${trend}`;\n    }\n    return (\n        <div className={className}>\n            <IconRateTrend value={trend}/>\n            {value}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { Rate, RateType, RateTypes } from \"./Rate\";\nimport { IconRate } from \"./IconRate\";\nimport \"./Article.scss\";\nimport { RateItem } from \"./RateItem\";\n\nconst CurrentRateItem: React.FC<{ type: RateType, rate: Rate }> = ({ type, rate }) => {\n    const value = rate[ type ];\n    return <div className=\"exchange-article__rate\" aria-label={type} aria-valuenow={value}>\n        <IconRate type={type}/>\n        <RateItem value={rate[ type ]}/>\n    </div>\n};\n\nexport const Article: React.FC<{ rate: Rate }> = ({ rate }) => {\n    return (\n        <article title={rate.currency} className=\"exchange-article\">\n            <h3 className=\"exchange-article__title\">\n                {rate.currency}\n            </h3>\n            {RateTypes.map((type) => <CurrentRateItem key={type} type={type} rate={rate}/>)}\n        </article>\n    )\n};\nArticle.displayName = \"Exchange.Article\";\n","import * as React from \"react\";\nimport { RateArray } from \"./Rate\";\nimport { Article } from \"./Article\";\n\nexport const Layout: React.FC<{ rates: RateArray }> = ({ rates }) => {\n    return <>{rates.map((rate) => <Article key={rate.currency} rate={rate}/>)}</>;\n};\n","import * as React from \"react\";\n\nimport \"./DateTime.scss\";\n\ntype Format = () => string;\nconst dateFormat: Format = () => new Date().toLocaleDateString();\nconst timeFormat: Format = () => new Date().toTimeString().slice(0, 8);\n\nexport type ItemProps = React.HTMLProps<HTMLSpanElement> & { format: Format, interval?: number };\nexport const Item = React.forwardRef<HTMLSpanElement, ItemProps>(\n    ({ format, interval = 1000, ...childProps }, ref) => {\n        const [time, tick] = React.useReducer<Format, undefined>(format, undefined, format);\n        React.useEffect(\n            () => clearInterval.bind(window, setInterval(tick, interval) as any),\n            [interval]\n        );\n        return <span {...childProps} className={`dt__item ${childProps.className}`.trimEnd()} ref={ref}>{time}</span>;\n    }\n);\n\nexport const DateTime = React.forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>(\n    (props, ref) => {\n        return (\n            <div {...props} ref={ref} className={`dt ${props.className}`.trimEnd()}>\n                <Item className=\"date\" format={dateFormat} interval={60000}/>\n                <Item className=\"time\" format={timeFormat}/>\n            </div>\n        )\n    }\n);\n","import * as React from \"react\";\nimport \"./Header.scss\";\nimport { DateTime } from \"./DateTime\";\n\nexport const Header: React.FC<{}> = () => {\n    return (\n        <header className=\"shadow\">\n            <img src=\"./logo.svg\" alt={\"Гривна Онлайн\"} className=\"logo\"/>\n            <h1 className=\"brand\">\n                гривна\n                <span className=\"fw-lighter\">.online</span>\n            </h1>\n            <h2 className=\"slogan\">\n                украинский дзен\n            </h2>\n            <DateTime />\n        </header>\n    );\n};\n","import * as React from \"react\";\nimport * as Exchange from \"./exchange\";\nimport \"./Background.scss\";\n\nexport type BackgroundTheme = \"ready\" | \"error\" | \"loading\";\nexport const getBackgroundTheme = (state: Exchange.State): BackgroundTheme => {\n    if (state === undefined) {\n        return \"loading\";\n    }\n    if (Array.isArray(state)) {\n        return \"ready\";\n    }\n    return \"error\";\n};\nexport type BackgroundProps = {\n    theme: BackgroundTheme;\n} | {\n    state: Exchange.State;\n}\n\nexport const Background: React.FC<BackgroundProps> = (props) => {\n    const theme = (\"theme\" in props) ? props.theme : getBackgroundTheme(props.state);\n    return (\n        <video autoPlay muted loop className={`background background_${theme}`}>\n            <source src=\"./background.mp4\" type=\"video/mp4\"/>\n        </video>\n    );\n};\n","import * as React from \"react\";\n\nexport const Stack: React.FC<{value: Error[\"stack\"] | React.ErrorInfo[\"componentStack\"]}> = ({value}) => {\n    let code: string;\n    try {\n        code = (\"string\" === typeof value) ? value : JSON.stringify(value);\n    } catch (error) {\n        code = `Unable to serialize stack: ${error.message}`;\n    }\n    return <code>{code}</code>;\n};\n","import * as React from \"react\";\nimport { Stack } from \"./Stack\";\n\nexport const Layout: React.FC<{ error: Error & Partial<React.ErrorInfo> }> = ({ error }) => {\n    return (\n        <details>\n            <summary>Произошла ошибка. Кина не будет.</summary>\n            <h3>{error.name}</h3>\n            <p>{error.message}</p>\n            <Stack value={error.stack}/>\n            {(\"componentStack\" in error) && <Stack value={error.componentStack}/>}\n        </details>\n    )\n};\nLayout.displayName = \"Error.Layout\";\n","import * as React from \"react\";\nimport { Layout } from \"./Layout\";\n\nexport class Boundary extends React.Component<{}, Error | {}> {\n    public static readonly displayName = \"Error.Boundary\";\n    public static readonly emptyState = Object.freeze({});\n\n    public readonly state: Error | {} = Boundary.emptyState;\n\n    static getDerivedStateFromError(error: Error) {\n        return error;\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        this.setState(error);\n        Object.assign(error, errorInfo);\n    }\n\n    render() {\n        if (this.state !== Boundary.emptyState) {\n            return <Layout error={this.state as Error}/>\n        }\n\n        return this.props.children;\n    }\n}\n","import * as React from \"react\";\n\nexport const Loader: React.FC<{}> = () => {\n    return <p>Loading...</p>;\n};\nLoader.displayName = \"Loader\";\n","import * as React from \"react\";\nimport * as Exchange from \"./exchange\";\nimport * as Error from \"./error\";\nimport { Loader } from \"./Loader\";\n\nimport \"./Main.scss\";\n\nconst getChildren = (exchange: Exchange.State) => {\n    if (exchange === undefined) {\n        return <Loader/>;\n    }\n    if (Array.isArray(exchange)) {\n        return <Exchange.Layout rates={exchange}/>;\n    }\n    return <Error.Layout error={exchange}/>;\n};\n\nexport const Main: React.FC<{ exchange: Exchange.State }> = ({ exchange }) => {\n    return <main><Error.Boundary>{getChildren(exchange)}</Error.Boundary></main>\n};\nMain.displayName = \"Main\";\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.querySelector('exchange-rate'));\n","import * as React from \"react\";\nimport './App.scss';\n\nimport * as Exchange from \"./exchange\";\n\nimport { Header } from \"./Header\";\nimport { Background } from \"./Background\";\nimport { Main } from \"./Main\";\n\nexport const App: React.FC<{}> = () => {\n    const exchange = Exchange.useState();\n\n    return (\n        <div className=\"app\">\n            <Background state={exchange}/>\n            <div className=\"container\">\n                <Header/>\n                <Main exchange={exchange}/>\n            </div>\n        </div>\n    );\n};\n"],"sourceRoot":""}