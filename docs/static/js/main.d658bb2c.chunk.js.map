{"version":3,"sources":["exchange/icon-buy.svg","exchange/icon-sale.svg","exchange/icon-arrow.svg","exchange/Rate.ts","exchange/RateHistoryCache.tsx","exchange/NationalBank.tsx","exchange/PrivatBank.tsx","exchange/State.tsx","exchange/IconRate.tsx","exchange/IconRateTrend.tsx","exchange/RateItem.tsx","exchange/HistoryChart.tsx","exchange/Article.tsx","exchange/Layout.tsx","DateTime.tsx","Header.tsx","Background.tsx","error/Stack.tsx","error/Layout.tsx","error/Boundary.tsx","Loader.tsx","Main.tsx","index.tsx","App.tsx"],"names":["module","exports","RateTypes","RateHistoryItem","currency","buy","sale","date","this","parseFloat","toISOString","slice","storageKey","storageKeyPrefix","get","key","item","localStorage","getItem","undefined","history","JSON","parse","Array","isArray","map","error","console","warn","set","data","stringify","setItem","getRateHistory","a","RateHistoryCache","fetch","split","join","then","response","json","cc","rate","getRate","length","today","Date","ccy","currencies","i","setHours","getHours","NationalBank","forEach","find","getImageSource","type","IconRate","className","src","alt","toUpperCase","IconRateTrend","value","arrow","RateItem","props","trend","current","previous","RateTrend","previousValue","toFixed","ChartLineGroup","items","interval","max","Math","min","delta","marks","reverse","push","points","p","fill","d","stroke","strokeWidth","replace","HistoryChart","trimEnd","height","viewBox","version","xmlns","preserveAspectRatio","id","x1","x2","gradientTransform","spreadMethod","offset","stopColor","stopOpacity","cx","cy","r","fy","x","y","width","fontSize","CurrentRateItem","aria-label","aria-valuenow","Article","title","displayName","Layout","rates","dateFormat","toLocaleDateString","timeFormat","toTimeString","Item","React","ref","format","childProps","time","tick","clearInterval","bind","window","setInterval","DateTime","Header","Background","state","theme","autoPlay","muted","loop","Stack","code","message","name","stack","componentStack","Boundary","emptyState","errorInfo","setState","Object","assign","children","freeze","Loader","Main","exchange","getChildren","ReactDOM","render","PrivatBank","Exchange","document","querySelector"],"mappings":"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","file":"static/js/main.d658bb2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-buy.404339d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-sale.9463f2b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow.7b6df126.svg\";","export type RateType = \"buy\" | \"sale\";\nexport const RateTypes: Array<RateType> = [\"buy\", \"sale\"];\n\nexport class RateHistoryItem {\n    public readonly buy: number;\n    public readonly sale: number;\n    public readonly date: string;\n\n    constructor(\n        public readonly  currency: string,\n        buy: string | number,\n        sale: string | number,\n        date: Date\n    ) {\n        this.buy = parseFloat(buy as string);\n        this.sale = parseFloat(sale as string);\n        this.date = date.toISOString().slice(0, 10);\n    }\n}\n\nexport type Rate = {\n    currency: string;\n    history: [RateHistoryItem] & Array<RateHistoryItem>;\n};\nexport type RateArray<R extends Rate = Rate> = Array<R>;\nexport type GetRate<R extends Rate = Rate> = () => Promise<RateArray<R>>;\n\nexport type RateTrend = \"up\" | \"down\" | undefined;\nexport const RateTrend: (current: number, prevous?: number) => RateTrend = (current, previous) => {\n    if ((previous === undefined) || (previous === current)) {\n        return undefined;\n    }\n    return (previous < current) ? \"up\" : \"down\";\n};\n\n","import { RateHistoryItem } from \"./Rate\";\n\nexport const storageKeyPrefix = `rate.history.`;\n\nexport function storageKey(date: Date): string {\n    return storageKeyPrefix + \".\" + date.toISOString().slice(0, 10);\n}\n\nexport function get(date: Date): Array<RateHistoryItem> | undefined {\n    const key = storageKey(date);\n    const item = localStorage.getItem(key) || undefined;\n    if (item === undefined) {\n        return;\n    }\n    try {\n        const history = JSON.parse(item);\n        if (Array.isArray(history)) {\n            return history.map(([currency, buy, sale]) => new RateHistoryItem(currency, buy, sale, date));\n        }\n    } catch (error) {\n        console.warn(error);\n    }\n    return undefined;\n}\n\nexport function set(date: Date, history: Array<RateHistoryItem>): void {\n    const key = storageKey(date);\n    const data = JSON.stringify(\n        history.map(({ buy, sale, currency }) => [currency, buy, sale])\n    );\n    localStorage.setItem(key, data);\n}\n","import { RateHistoryItem } from \"./Rate\";\nimport * as RateHistoryCache from \"./RateHistoryCache\";\n\nexport async function getRateHistory(date: Date): Promise<Array<RateHistoryItem>> {\n    let history = RateHistoryCache.get(date);\n    if (history !== undefined) {\n        return history;\n    }\n\n    const response = await fetch(\n        `https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json&date=`\n        + date.toISOString().slice(0, 10).split('-', 3).join('')\n    ).then((response): Promise<Array<HistoryResponseItem>> => response.json());\n\n    history = response.map(\n        ({ cc, rate }) => new RateHistoryItem(\n            cc, rate, rate, date\n        )\n    );\n    RateHistoryCache.set(date, history);\n    return history;\n}\n\ntype HistoryResponseItem = {\n    cc: string;\n    rate: string;\n    exchangedate: string;\n}\n","import * as RateHistoryCache from \"./RateHistoryCache\";\nimport * as NationalBank from \"./NationalBank\";\nimport { GetRate, RateArray, RateHistoryItem } from \"./Rate\";\n\ntype ResponseItem = {\n    ccy: string;\n    buy: string;\n    sale: string;\n}\n\nexport const getRate: GetRate = async (length: Exclude<number, 0> = 30): Promise<RateArray> => {\n    const today = new Date();\n    const currencies: RateArray = await fetch(\"https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11\")\n        .then((response): Promise<Array<ResponseItem>> => response.json())\n        .then((json): RateArray => json.map(({ ccy: currency, buy, sale }) => {\n            if (currency === \"RUR\") {\n                currency = \"RUB\";\n            }\n            return { currency, history: [new RateHistoryItem(currency, buy, sale, today)] };\n        }));\n\n    for (let i = 1; i < length; i++) {\n        const date = new Date(today);\n        date.setHours(today.getHours() - i * 24);\n\n        const history = await NationalBank.getRateHistory(date);\n        history\n            .forEach((item) => {\n                const rate = currencies.find((rate) => rate.currency === item.currency);\n                if (rate !== undefined) {\n                    rate.history[ i ] = item;\n                }\n            });\n    }\n\n    return currencies;\n};\n\n/**\n * PrivatBank disable CORS for rates history. :(\n */\nexport async function getRateHistory(date: Date): Promise<Array<RateHistoryItem>> {\n    let history = RateHistoryCache.get(date);\n    if (history !== undefined) {\n        return history;\n    }\n\n    const response = await fetch(\n        `https://api.privatbank.ua/p24api/exchange_rates?json&date=`\n        + date.toISOString().slice(0, 10).split('-', 3).reverse().join('.')\n    ).then((response): Promise<Array<HistoryResponseItem>> => response.json());\n\n    return response.map(\n        ({ currency, purchaseRate, saleRate }) => new RateHistoryItem(\n            currency, purchaseRate, saleRate, date\n        )\n    );\n}\n\ntype HistoryResponseItem = {\n    currency: string;\n    purchaseRate: string;\n    saleRate: string;\n}\n","import * as React from \"react\";\n\nimport * as PrivatBank from \"./PrivatBank\";\nimport { RateArray } from \"./Rate\";\n\nexport type State = RateArray | Error | undefined;\nexport const useState = (): State => {\n    const [state, setState] = React.useState<State>(undefined);\n    React.useEffect(() => {\n        if (state !== undefined) {\n            return;\n        }\n        PrivatBank.getRate().then(setState, setState);\n    }, [state]);\n    return state;\n};\n","import * as React from \"react\";\nimport { RateType } from \"./Rate\";\n\nimport buy from \"./icon-buy.svg\";\nimport sale from \"./icon-sale.svg\";\nimport \"./IconRate.scss\";\n\nconst getImageSource = (type: RateType) => {\n    switch (type) {\n        case \"buy\":\n            return buy;\n        case \"sale\":\n            return sale;\n    }\n};\n\nexport const IconRate: React.FC<{ type: RateType }> = ({ type }) => {\n    return <img\n        className=\"icon-rate\"\n        src={getImageSource(type)}\n        alt={type[ 0 ].toUpperCase() + type.slice(1) + \" Rate\"}\n    />;\n};\n","import * as React from \"react\";\nimport { RateTrend } from \"./Rate\";\nimport arrow from \"./icon-arrow.svg\";\n\nexport const IconRateTrend: React.FC<{ value: RateTrend }> = ({ value }) => {\n    if (value === undefined) {\n        return null;\n    }\n    return <img src={arrow} alt={`${value} trend icon`} className={`icon-rate-trend icon-rate-trend__${value}`}/>;\n};\n","import * as React from \"react\";\nimport { RateTrend } from \"./Rate\";\nimport { IconRateTrend } from \"./IconRateTrend\";\nimport \"./RateItem.scss\";\nexport type RateValueProps = {\n    value: number;\n} & ({ trend: RateTrend } | { previousValue?: number, });\n\nexport const RateItem: React.FC<RateValueProps> = (props) => {\n    const trend = (\"trend\" in props) ? props.trend : RateTrend(props.value, props.previousValue);\n    const value = props.value.toFixed(2);\n    let className = `rate-item`;\n    if (trend !== undefined) {\n        className += ` ${className}__${trend}`;\n    }\n    return (\n        <div className={className}>\n            <IconRateTrend value={trend}/>\n            {value}\n        </div>\n    );\n};\n","import * as React from \"react\";\nimport { RateHistoryItem } from \"./Rate\";\n\nconst ChartLineGroup: React.FC<{ items: Array<number>, min?: number, max?: number, interval: number, }> = (\n    {\n        items,\n        interval,\n        max = Math.max(...items)\n    }\n) => {\n    const min = Math.min(...items);\n    const delta = max - min;\n    const marks = items.reverse().map((item, i) => [\n        (i * interval * 2),\n        (100 - (item - min + delta) / (max - min + delta + delta) * 100).toFixed(4)\n    ]);\n    marks.push([marks[ marks.length - 1 ][ 0 ], 100]);\n    const points = \"M 0 100 L \" + marks.map((p) => p.join(\" \")).join(\" \") + \" Z\";\n\n    return (\n        <g className=\"history-chart__line\">\n            <path\n                fill=\"url(#grid2)\"\n                d={points}\n            />\n            <path\n                fill=\"none\"\n                stroke=\"white\"\n                strokeWidth=\"2\"\n                d={points.replace(\"M 0 100 L \", '').replace(/Z$/, '')}\n            />\n        </g>\n    );\n};\n\n\nexport const HistoryChart: React.FC<{\n    items: Array<RateHistoryItem>,\n    interval?: number,\n} & React.SVGProps<SVGSVGElement>> = (\n    {\n        items,\n        interval = 10,\n        ...props\n    }\n) => {\n    return (\n        <svg {...props} className={`history-chart ${props.className || \"\"}`.trimEnd()} height=\"128px\"\n             viewBox={[-interval, -interval, interval * items.length * 2, 100 + interval].join(\" \")}\n             version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n             preserveAspectRatio=\"xMaxYMid slice\"\n        >\n            <defs>\n                <linearGradient id=\"grid1\" x1=\"0%\" x2=\"50%\" gradientTransform=\"rotate(90)\" spreadMethod=\"reflect\">\n                    <stop offset=\"0\" stopColor=\"white\" stopOpacity=\"0\"/>\n                    <stop offset=\"100%\" stopColor=\"white\" stopOpacity=\"0.29\"/>\n                </linearGradient>\n                <radialGradient id=\"grid2\" x1=\"30%\" x2=\"70%\"  cx = \"50%\" cy = \"50%\" r=\"65%\" fy=\"15%\" >\n                    <stop offset=\"0\" stopColor=\"white\" stopOpacity=\".8\"/>\n                    <stop offset=\"10%\" stopColor=\"white\" stopOpacity=\".7\"/>\n                    <stop offset=\"30%\" stopColor=\"white\" stopOpacity=\".5\"/>\n                    <stop offset=\"100%\" stopColor=\"white\" stopOpacity=\"0\"/>\n                </radialGradient>\n            </defs>\n            <g className={\"history-chart__grid\"}>\n                {items.map((item, key) => {\n                    const x = key * interval * 2;\n                    return <rect key={\"grid\" + item.currency + item.date} x={x} y={interval} width=\"1\"\n                                 fill=\"url(#grid1)\"\n                                 height={(100 - interval * 2)}/>;\n                })}\n            </g>\n            <g className=\"history-chart__legend\">\n                {items.map((item, key) => {\n                    const fontSize = interval - 1;\n                    const x = key * interval * 2 - fontSize / 2;\n                    return <text key={\"legend\" + item.currency + item.date} x={x} y={100} fill=\"white\"\n                                 fontSize={fontSize}>{item.date.slice(-2)}</text>;\n                })}\n            </g>\n            <ChartLineGroup items={items.map((item) => item.buy)} min={0} interval={interval}/>\n        </svg>\n\n    )\n};\n","import * as React from \"react\";\nimport { Rate, RateType, RateTypes } from \"./Rate\";\nimport { IconRate } from \"./IconRate\";\nimport \"./Article.scss\";\nimport { RateItem } from \"./RateItem\";\nimport { HistoryChart } from \"./HistoryChart\";\n\nconst CurrentRateItem: React.FC<{ type: RateType, rate: Rate }> = ({ type, rate }) => {\n    const value = rate.history[0][type];\n    return <div className=\"exchange-article__rate\" aria-label={type} aria-valuenow={value}>\n        <IconRate type={type}/>\n        <RateItem value={value}/>\n    </div>\n};\n\nexport const Article: React.FC<{ rate: Rate }> = ({ rate }) => {\n    return (\n        <article title={rate.currency} className=\"exchange-article\">\n            <h3 className=\"exchange-article__title\">\n                {rate.currency}\n            </h3>\n            {RateTypes.map((type) => <CurrentRateItem key={type} type={type} rate={rate}/>)}\n            {rate.history.length > 1 && (\n                <HistoryChart items={rate.history} className=\"exchange-article__chart\" preserveAspectRatio=\"xMinYMid meet\"/>\n            )}\n        </article>\n    )\n};\nArticle.displayName = \"Exchange.Article\";\n","import * as React from \"react\";\nimport { RateArray } from \"./Rate\";\nimport { Article } from \"./Article\";\n\nexport const Layout: React.FC<{ rates: RateArray }> = ({ rates }) => {\n    return <>{rates.map((rate) => <Article key={rate.currency} rate={rate}/>)}</>;\n};\n","import * as React from \"react\";\n\nimport \"./DateTime.scss\";\n\ntype Format = () => string;\nconst dateFormat: Format = () => new Date().toLocaleDateString();\nconst timeFormat: Format = () => new Date().toTimeString().slice(0, 8);\n\nexport type ItemProps = React.HTMLProps<HTMLSpanElement> & { format: Format, interval?: number };\nexport const Item = React.forwardRef<HTMLSpanElement, ItemProps>(\n    ({ format, interval = 1000, ...childProps }, ref) => {\n        const [time, tick] = React.useReducer<Format, undefined>(format, undefined, format);\n        React.useEffect(\n            () => clearInterval.bind(window, setInterval(tick, interval) as any),\n            [interval]\n        );\n        return <span {...childProps} className={`dt__item ${childProps.className}`.trimEnd()} ref={ref}>{time}</span>;\n    }\n);\n\nexport const DateTime = React.forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>(\n    (props, ref) => {\n        return (\n            <div {...props} ref={ref} className={`dt ${props.className}`.trimEnd()}>\n                <Item className=\"date\" format={dateFormat} interval={60000}/>\n                <Item className=\"time\" format={timeFormat}/>\n            </div>\n        )\n    }\n);\n","import * as React from \"react\";\nimport \"./Header.scss\";\nimport { DateTime } from \"./DateTime\";\n\nexport const Header: React.FC<{}> = () => {\n    return (\n        <header className=\"shadow\">\n            <img src=\"./logo.svg\" alt={\"Гривна Онлайн\"} className=\"logo\"/>\n            <h1 className=\"brand\">\n                гривна\n                <span className=\"fw-lighter\">.online</span>\n            </h1>\n            <h2 className=\"slogan\">\n                украинский дзен\n            </h2>\n            <DateTime />\n        </header>\n    );\n};\n","import * as React from \"react\";\nimport * as Exchange from \"./exchange\";\nimport \"./Background.scss\";\n\nexport type BackgroundTheme = \"ready\" | \"error\" | \"loading\";\nexport const getBackgroundTheme = (state: Exchange.State): BackgroundTheme => {\n    if (state === undefined) {\n        return \"loading\";\n    }\n    if (Array.isArray(state)) {\n        return \"ready\";\n    }\n    return \"error\";\n};\nexport type BackgroundProps = {\n    theme: BackgroundTheme;\n} | {\n    state: Exchange.State;\n}\n\nexport const Background: React.FC<BackgroundProps> = (props) => {\n    const theme = (\"theme\" in props) ? props.theme : getBackgroundTheme(props.state);\n    return (\n        <video autoPlay muted loop className={`background background_${theme}`}>\n            <source src=\"./background.mp4\" type=\"video/mp4\"/>\n        </video>\n    );\n};\n","import * as React from \"react\";\n\nexport const Stack: React.FC<{value: Error[\"stack\"] | React.ErrorInfo[\"componentStack\"]}> = ({value}) => {\n    let code: string;\n    try {\n        code = (\"string\" === typeof value) ? value : JSON.stringify(value);\n    } catch (error) {\n        code = `Unable to serialize stack: ${error.message}`;\n    }\n    return <code>{code}</code>;\n};\n","import * as React from \"react\";\nimport { Stack } from \"./Stack\";\n\nexport const Layout: React.FC<{ error: Error & Partial<React.ErrorInfo> }> = ({ error }) => {\n    return (\n        <details>\n            <summary>Произошла ошибка. Кина не будет.</summary>\n            <h3>{error.name}</h3>\n            <p>{error.message}</p>\n            <Stack value={error.stack}/>\n            {(\"componentStack\" in error) && <Stack value={error.componentStack}/>}\n        </details>\n    )\n};\nLayout.displayName = \"Error.Layout\";\n","import * as React from \"react\";\nimport { Layout } from \"./Layout\";\n\nexport class Boundary extends React.Component<{}, Error | {}> {\n    public static readonly displayName = \"Error.Boundary\";\n    public static readonly emptyState = Object.freeze({});\n\n    public readonly state: Error | {} = Boundary.emptyState;\n\n    static getDerivedStateFromError(error: Error) {\n        return error;\n    }\n\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n        this.setState(error);\n        Object.assign(error, errorInfo);\n    }\n\n    render() {\n        if (this.state !== Boundary.emptyState) {\n            return <Layout error={this.state as Error}/>\n        }\n\n        return this.props.children;\n    }\n}\n","import * as React from \"react\";\n\nexport const Loader: React.FC<{}> = () => {\n    return <p>Loading...</p>;\n};\nLoader.displayName = \"Loader\";\n","import * as React from \"react\";\nimport * as Exchange from \"./exchange\";\nimport * as Error from \"./error\";\nimport { Loader } from \"./Loader\";\n\nimport \"./Main.scss\";\n\nconst getChildren = (exchange: Exchange.State) => {\n    if (exchange === undefined) {\n        return <Loader/>;\n    }\n    if (Array.isArray(exchange)) {\n        return <Exchange.Layout rates={exchange}/>;\n    }\n    return <Error.Layout error={exchange}/>;\n};\n\nexport const Main: React.FC<{ exchange: Exchange.State }> = ({ exchange }) => {\n    return <main><Error.Boundary>{getChildren(exchange)}</Error.Boundary></main>\n};\nMain.displayName = \"Main\";\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.querySelector('exchange-rate'));\n","import * as React from \"react\";\nimport './App.scss';\n\nimport * as Exchange from \"./exchange\";\n\nimport { Header } from \"./Header\";\nimport { Background } from \"./Background\";\nimport { Main } from \"./Main\";\n\nexport const App: React.FC<{}> = () => {\n    const exchange = Exchange.useState();\n\n    return (\n        <div className=\"app\">\n            <Background state={exchange}/>\n            <div className=\"container\">\n                <Header/>\n                <Main exchange={exchange}/>\n            </div>\n        </div>\n    );\n};\n"],"sourceRoot":""}